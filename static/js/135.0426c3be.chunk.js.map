{"version":3,"file":"static/js/135.0426c3be.chunk.js","mappings":"oOACA,GAAgB,aAAe,mCAAmC,wBAA0B,+C,SCQtFA,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IA4HrB,EA3HqB,WACnB,OAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAeP,GAASQ,MAAK,SAAAC,GAE3BV,EAASU,EAGV,GAGF,GAAE,CAACT,IAaJ,IAMaU,EAQPC,EAAc,SAAAC,GAClB,IAAMC,EAAWD,EAAEE,cAAcC,KACjC,OAAQF,GACN,IAAK,OACHhB,GAAe,GACfF,GAAY,SAAAqB,GAAQ,OAAKA,CAAL,IACpB,MACF,IAAK,UACHrB,GAAY,GACZE,GAAe,SAAAoB,GAAO,OAAKA,CAAL,IACtB,MACF,QACEC,QAAQC,IAAI,wBAA0BN,EAAW,KAEtD,EASD,OACE,iBAAKO,UAAWC,EAAAA,aAAhB,WAEE,mBAAQC,QAVU,SAAAV,GAAM,IAAD,IACzBA,EAAEW,iBAEF,IAAMC,EAAQ,oBAAGpB,EAASqB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACzCxB,EAASsB,EACV,EAKmCJ,UAAU,oBAA1C,sBAGA,iBAAKA,UAAWC,EAAAA,wBAAhB,WACE,0BACE,gBACEM,IAAG,yCAAoC7B,EAAM8B,aAC7CC,IAAK/B,EAAMgC,oBAGf,4BACE,0BACGhC,EAAMgC,eADT,MA7CKpB,EA8C2BZ,EAAMiC,aA7C5C,OAAOrB,QAAP,IAAOA,OAAP,EAAOA,EAAOsB,MAAM,EAAG,IA4CjB,QAGA,uCA5CU,SAAAtB,GAChB,OAAOuB,KAAKC,MAAc,GAARxB,EACnB,CA0CsByB,CAAUrC,EAAMsC,cAA/B,QACA,sCACA,uBAAItC,EAAMuC,YACV,oCACA,uBA1DO,SAAAC,GACb,GAAY,OAARA,EACJ,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAKC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAC3C,CAuDWC,CAAO7C,EAAM6C,iBAGrB,mDACA,2BACE,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAa9C,EAAM+C,GAAnB,SACFpB,MAAOrB,EAASqB,MAChBL,UAAWC,EAAAA,mBACXC,QAASX,EAJX,qBASF,yBACE,SAAC,KAAD,CACEiC,GAAE,kBAAa9C,EAAM+C,GAAnB,YACFpB,MAAOrB,EAASqB,MAChBL,UAAWC,EAAAA,mBACXC,QAASX,EAJX,0BAUHjB,IAAc,SAACJ,EAAD,IACdM,IAAiB,SAACJ,EAAD,MAGvB,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"movieDetails__container\":\"MovieDetails_movieDetails__container__trVUx\"};","import { useParams, Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useState, useEffect, lazy } from 'react';\n\n// import { getMovieById } from '../../helpers/getMovieById';\n// import { getGenres } from '../../helpers/getGenres';\nimport * as api from '../../helpers/api';\nimport css from './MovieDetails.module.css';\n// import {Cast from} 'components/Cast/Cast';\n// import { Reviews } from 'components/Reviews/Reviews';\nconst Cast = lazy(() => import('../../components/Cast/Cast'));\nconst Reviews = lazy(() => import('../../components/Reviews/Reviews'));\nconst MovieDetails = () => {\n  const [isShowCast, setShowCast] = useState(false);\n  const [isShowReviews, setShowReviews] = useState(false);\n  const [movie, setMovie] = useState({});\n\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    api.getMovieId(movieId).then(resp => {\n      // console.log(resp);\n      setMovie(resp);\n      // saveInLS('Movie', resp.results);\n      // setPopularMovies(resp.results);\n    });\n    // fetchPopularMovies();\n    // fetchGenres();\n  }, [movieId]);\n\n  // const {\n  //   id,\n  //   poster_path,\n  //   original_title,\n  //   overview,\n  //   genre_ids,\n  // release_date,\n  // vote_average,\n  // } = getMovieById(Number(movieId));\n\n  // const genres = getGenres(genre_ids);\n  const genres = arr => {\n    if (arr === null) return;\n    return arr?.map(genre => genre.name).join(', ');\n  };\n\n  // const year = release_date.slice(0, 4);\n  const year = score => {\n    return score?.slice(0, 4);\n  };\n  // const userScore = Math.round(vote_average * 10);\n  const userScore = score => {\n    return Math.round(score * 10);\n  };\n\n  const onClickLink = e => {\n    const nameLink = e.currentTarget.text;\n    switch (nameLink) {\n      case 'Cast':\n        setShowReviews(false);\n        setShowCast(prevCast => !prevCast);\n        break;\n      case 'Reviews':\n        setShowCast(false);\n        setShowReviews(prevRev => !prevRev);\n        break;\n      default:\n        console.log('Sorry, we are out of ' + nameLink + '.');\n    }\n  };\n\n  const onClickGoBack = e => {\n    e.preventDefault();\n    // console.log(location.state.from);\n    const backLink = location.state?.from ?? '/';\n    navigate(backLink);\n  };\n\n  return (\n    <div className={css.movieDetails}>\n      {/* <Link to={location.state.from}>Go back</Link> */}\n      <button onClick={onClickGoBack} className=\"movieDetails__btn\">\n        Go back\n      </button>\n      <div className={css.movieDetails__container}>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n            alt={movie.original_title}\n          />\n        </div>\n        <div>\n          <h2>\n            {movie.original_title} ({year(movie.release_date)})\n          </h2>\n          <p>User score {userScore(movie.vote_average)}%</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h4>Genres</h4>\n          <p>{genres(movie.genres)}</p>\n        </div>\n      </div>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link\n            to={`/movies/${movie.id}/cast`}\n            state={location.state}\n            className={css.movieDetails__link}\n            onClick={onClickLink}\n          >\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={`/movies/${movie.id}/reviews`}\n            state={location.state}\n            className={css.movieDetails__link}\n            onClick={onClickLink}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      {isShowCast && <Cast />}\n      {isShowReviews && <Reviews />}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Cast","lazy","Reviews","useState","isShowCast","setShowCast","isShowReviews","setShowReviews","movie","setMovie","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","api","then","resp","score","onClickLink","e","nameLink","currentTarget","text","prevCast","prevRev","console","log","className","css","onClick","preventDefault","backLink","state","from","src","poster_path","alt","original_title","release_date","slice","Math","round","userScore","vote_average","overview","arr","map","genre","name","join","genres","to","id"],"sourceRoot":""}