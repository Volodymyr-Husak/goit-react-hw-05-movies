{"version":3,"file":"static/js/278.cda8f93d.chunk.js","mappings":"gNAqFA,UAhFe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,SAE7BC,GAAWC,EAAAA,EAAAA,MAMXC,EAAc,SAAAC,GAClB,IACEC,MAAM,GAAD,OAJQ,sDAIR,OALO,mCAKP,kBAC4BD,EAD5B,+CAGFE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAG,IACJC,EAAAA,EAAAA,GAAS,QAASD,EAAIE,SACtBlB,EAAUgB,EAAIE,QACf,GAGJ,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAEDG,EAAAA,EAAAA,YAAU,WACU,KAAdhB,GAAkC,OAAdA,GAExBI,EAAYJ,EACb,GAAE,CAACA,IAYJ,OACE,iCACE,kBAAMiB,UAAU,mBAAmBC,SATlB,SAAAC,GACnBA,EAAEC,iBACFxB,EAAS,IACTQ,EAAYT,IACZ0B,EAAAA,EAAAA,KACAtB,EAAgB,CAAEJ,MAAOA,GAC1B,EAGG,WACE,mBAAQsB,UAAU,0BAA0BK,KAAK,SAAjD,UACE,iBAAML,UAAU,gCAAhB,uBAGF,kBAEEM,SAnBsB,SAAAJ,GAC5BvB,EAASuB,EAAEK,cAAcC,MAC1B,EAkBOC,KAAK,cACLJ,KAAK,OACLK,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZJ,MAAO9B,QAGX,wBACGF,EAAOqC,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACjB,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMjC,EAASkC,SAAWlC,EAASmC,QAF9C,SAIGL,KALID,EASZ,QAIR,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport fetchGenres from '../../helpers/fetchGenres';\nimport { saveInLS } from '../../helpers/storage';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const nameMovie = searchParams.get('query');\n\n  const location = useLocation();\n  //   console.log(location);\n\n  const API_KEY = '301d018a3b09052968e9ce18b1793bab';\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie?api_key=';\n\n  const fetchMovies = movieName => {\n    try {\n      fetch(\n        `${BASE_URL}${API_KEY}&query=${movieName}&language=en-US&page=1&include_adult=false`\n      )\n        .then(res => res.json())\n        .then(obj => {\n          saveInLS('Movie', obj.results);\n          setMovies(obj.results);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (nameMovie === '' || nameMovie === null) return;\n    // console.log('nameMovie', nameMovie);\n    fetchMovies(nameMovie);\n  }, [nameMovie]);\n\n  const handleMovieNameChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery('');\n    fetchMovies(query);\n    fetchGenres();\n    setSearchParams({ query: query });\n  };\n  return (\n    <>\n      <form className=\"{css.searchForm}\" onSubmit={handleSubmit}>\n        <button className=\"{css.searchForm_button}\" type=\"submit\">\n          <span className=\"{css.searchForm_button_label}\">Search</span>\n        </button>\n\n        <input\n          //   className=\"{css.searchForm_input}\"\n          onChange={handleMovieNameChange}\n          name=\"searchMovie\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={query}\n        />\n      </form>\n      <ul>\n        {movies.map(({ id, original_title }) => {\n          return (\n            <li key={id}>\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: location.pathname + location.search }}\n              >\n                {original_title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movies","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","nameMovie","get","location","useLocation","fetchMovies","movieName","fetch","then","res","json","obj","saveInLS","results","error","console","log","useEffect","className","onSubmit","e","preventDefault","fetchGenres","type","onChange","currentTarget","value","name","autoComplete","autoFocus","placeholder","map","id","original_title","to","state","from","pathname","search"],"sourceRoot":""}