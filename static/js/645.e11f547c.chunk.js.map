{"version":3,"file":"static/js/645.e11f547c.chunk.js","mappings":"oOAEMA,GAASC,EAAAA,EAAAA,GAAW,UAEbC,EAAY,SAAAC,GACvB,IAAIC,EAAW,GAQf,OAPAJ,EAAOK,KAAI,SAAAC,GACT,OAAIH,EAAQI,SAASD,EAAME,IAClBJ,EAASK,KAAKH,EAAMI,MAEpB,IAEV,IACMN,EAASO,KAAK,KACtB,ECbD,GAAgB,aAAe,mCAAmC,wBAA0B,+C,SCOtFC,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAsGrB,EArGqB,WACnB,OAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAsBC,EAAtB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAEjB,EClB0B,SAAAL,GAE1B,OADenB,EAAAA,EAAAA,GAAW,SACZyB,MAAK,SAAAC,GAAK,OAAIA,EAAMnB,KAAOY,CAAjB,GACzB,CDuBKQ,CAAaC,OAAOT,IAPtBZ,EADF,EACEA,GACAsB,EAFF,EAEEA,YACAC,EAHF,EAGEA,eACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,UACAC,EANF,EAMEA,aACAC,EAPF,EAOEA,aAGInC,EAASE,EAAU+B,GAEnBG,EAAOF,EAAaG,MAAM,EAAG,GAC7BC,EAAYC,KAAKC,MAAqB,GAAfL,GAEvBM,EAAc,SAAAC,GAClB,IAAMC,EAAWD,EAAEE,cAAcC,KACjC,OAAQF,GACN,IAAK,OACHxB,GAAe,GACfF,GAAY,SAAA6B,GAAQ,OAAKA,CAAL,IACpB,MACF,IAAK,UACH7B,GAAY,GACZE,GAAe,SAAA4B,GAAO,OAAKA,CAAL,IACtB,MACF,QACEC,QAAQC,IAAI,wBAA0BN,EAAW,KAEtD,EASD,OACE,iBAAKO,UAAWC,EAAAA,aAAhB,WAEE,mBAAQC,QAVU,SAAAV,GAAM,IAAD,IACzBA,EAAEW,iBAEF,IAAMC,EAAQ,oBAAG9B,EAAS+B,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACzClC,EAASgC,EACV,EAKmCJ,UAAU,oBAA1C,sBAGA,iBAAKA,UAAWC,EAAAA,wBAAhB,WACE,0BACE,gBACEM,IAAG,yCAAoC3B,GACvC4B,IAAK3B,OAGT,4BACE,0BACGA,EADH,KACqBK,EADrB,QAGA,uCAAeE,EAAf,QACA,sCACA,uBAAIN,KACJ,oCACA,uBAAIhC,WAGR,mDACA,2BACE,yBACE,SAAC,KAAD,CACE2D,GAAE,kBAAanD,EAAb,SACF+C,MAAO/B,EAAS+B,MAChBL,UAAWC,EAAAA,mBACXC,QAASX,EAJX,qBASF,yBACE,SAAC,KAAD,CACEkB,GAAE,kBAAanD,EAAb,YACF+C,MAAO/B,EAAS+B,MAChBL,UAAWC,EAAAA,mBACXC,QAASX,EAJX,0BAUHzB,IAAc,SAACJ,EAAD,IACdM,IAAiB,SAACJ,EAAD,MAGvB,C","sources":["helpers/getGenres.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","helpers/getMovieById.js"],"sourcesContent":["import { loadWithLS } from './storage';\n\nconst genres = loadWithLS('Genres');\n\nexport const getGenres = genreId => {\n  let arrGenre = [];\n  genres.map(genre => {\n    if (genreId.includes(genre.id)) {\n      return arrGenre.push(genre.name);\n    } else {\n      return null;\n    }\n  });\n  return arrGenre.join(', ');\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"movieDetails__container\":\"MovieDetails_movieDetails__container__Iaylr\"};","import { useParams, Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useState, lazy } from 'react';\n\nimport { getMovieById } from '../../helpers/getMovieById';\nimport { getGenres } from 'helpers/getGenres';\nimport css from './MovieDetails.module.css';\n// import {Cast from} 'components/Cast/Cast';\n// import { Reviews } from 'components/Reviews/Reviews';\nconst Cast = lazy(() => import('../Cast/Cast'));\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\nconst MovieDetails = () => {\n  const [isShowCast, setShowCast] = useState(false);\n  const [isShowReviews, setShowReviews] = useState(false);\n\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n\n  const location = useLocation();\n\n  const {\n    id,\n    poster_path,\n    original_title,\n    overview,\n    genre_ids,\n    release_date,\n    vote_average,\n  } = getMovieById(Number(movieId));\n\n  const genres = getGenres(genre_ids);\n\n  const year = release_date.slice(0, 4);\n  const userScore = Math.round(vote_average * 10);\n\n  const onClickLink = e => {\n    const nameLink = e.currentTarget.text;\n    switch (nameLink) {\n      case 'Cast':\n        setShowReviews(false);\n        setShowCast(prevCast => !prevCast);\n        break;\n      case 'Reviews':\n        setShowCast(false);\n        setShowReviews(prevRev => !prevRev);\n        break;\n      default:\n        console.log('Sorry, we are out of ' + nameLink + '.');\n    }\n  };\n\n  const onClickGoBack = e => {\n    e.preventDefault();\n    // console.log(location.state.from);\n    const backLink = location.state?.from ?? '/';\n    navigate(backLink);\n  };\n\n  return (\n    <div className={css.movieDetails}>\n      {/* <Link to={location.state.from}>Go back</Link> */}\n      <button onClick={onClickGoBack} className=\"movieDetails__btn\">\n        Go back\n      </button>\n      <div className={css.movieDetails__container}>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n            alt={original_title}\n          />\n        </div>\n        <div>\n          <h2>\n            {original_title} ({year})\n          </h2>\n          <p>User score {userScore}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>{genres}</p>\n        </div>\n      </div>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link\n            to={`/movies/${id}/cast`}\n            state={location.state}\n            className={css.movieDetails__link}\n            onClick={onClickLink}\n          >\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={`/movies/${id}/reviews`}\n            state={location.state}\n            className={css.movieDetails__link}\n            onClick={onClickLink}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      {isShowCast && <Cast />}\n      {isShowReviews && <Reviews />}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import { loadWithLS } from './storage';\n\nexport const getMovieById = movieId => {\n  const movies = loadWithLS('Movie');\n  return movies.find(movie => movie.id === movieId);\n};\n"],"names":["genres","loadWithLS","getGenres","genreId","arrGenre","map","genre","includes","id","push","name","join","Cast","lazy","Reviews","useState","isShowCast","setShowCast","isShowReviews","setShowReviews","movieId","useParams","navigate","useNavigate","location","useLocation","find","movie","getMovieById","Number","poster_path","original_title","overview","genre_ids","release_date","vote_average","year","slice","userScore","Math","round","onClickLink","e","nameLink","currentTarget","text","prevCast","prevRev","console","log","className","css","onClick","preventDefault","backLink","state","from","src","alt","to"],"sourceRoot":""}