{"version":3,"file":"static/js/311.dedfb896.chunk.js","mappings":"0PAGaA,GAASC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6TAgBNE,EAASF,EAAAA,GAAAA,OAAH,0O,SClBnB,GAAgB,aAAe,mCAAmC,wBAA0B,8CAA8C,2BAA6B,iDAAiD,uBAAyB,6CAA6C,uBAAyB,8C,SCSjTG,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,0BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAsHrB,EArHqB,WACnB,OAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAeP,GAASQ,MAAK,SAAAC,GAC3BV,EAASU,EACV,GACF,GAAE,CAACT,IAaJ,IAMaU,EAQPC,EAAc,SAAAC,GAClB,IAAMC,EAAWD,EAAEE,cAAcC,KACjC,OAAQF,GACN,IAAK,OACHhB,GAAe,GACfF,GAAY,SAAAqB,GAAQ,OAAKA,CAAL,IACpB,MACF,IAAK,UACHrB,GAAY,GACZE,GAAe,SAAAoB,GAAO,OAAKA,CAAL,IACtB,MACF,QACEC,QAAQC,IAAI,wBAA0BN,EAAW,KAEtD,EAQD,OACE,UAACO,EAAA,EAAD,CAASC,UAAWC,EAAAA,aAApB,WAEE,SAACjC,EAAD,CAAQkC,QATU,SAAAX,GAAM,IAAD,IACzBA,EAAEY,iBACF,IAAMC,EAAQ,oBAAGrB,EAASsB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACzCzB,EAASuB,EACV,EAKmCJ,UAAU,oBAA1C,sBAGA,iBAAKA,UAAWC,EAAAA,wBAAhB,WACE,gBAAKD,UAAWC,EAAAA,2BAAhB,UACE,gBACEM,IAAG,yCAAoC9B,EAAM+B,aAC7CC,IAAKhC,EAAMiC,oBAGf,4BACE,0BACGjC,EAAMiC,eADT,MA5CKrB,EA6C2BZ,EAAMkC,aA5C5C,OAAOtB,QAAP,IAAOA,OAAP,EAAOA,EAAOuB,MAAM,EAAG,IA2CjB,QAGA,uCA3CU,SAAAvB,GAChB,OAAOwB,KAAKC,MAAc,GAARzB,EACnB,CAyCsB0B,CAAUtC,EAAMuC,cAA/B,QACA,sCACA,uBAAIvC,EAAMwC,YACV,oCACA,uBAzDO,SAAAC,GACb,GAAY,OAARA,EACJ,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAKC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAC3C,CAsDWC,CAAO9C,EAAM8C,iBAGrB,mDACA,gBAAIvB,UAAWC,EAAAA,uBAAf,WACE,eAAID,UAAWC,EAAAA,uBAAf,UACE,SAACpC,EAAD,CACE2D,GAAE,kBAAa/C,EAAMgD,GAAnB,SACFpB,MAAOtB,EAASsB,MAChBL,UAAWC,EAAAA,mBACXC,QAASZ,EAJX,qBASF,eAAIU,UAAWC,EAAAA,uBAAf,UACE,SAACpC,EAAD,CACE2D,GAAE,kBAAa/C,EAAMgD,GAAnB,YACFpB,MAAOtB,EAASsB,MAChBL,UAAWC,EAAAA,mBACXC,QAASZ,EAJX,0BAUHjB,IAAc,SAACJ,EAAD,IACdM,IAAiB,SAACJ,EAAD,MAGvB,C","sources":["pages/MovieDetails/MovieDetails.styled.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkEl = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: blue;\n  font-weight: 500;\n\n  &.active {\n    color: rgb(180, 72, 30);\n    background-color: rgb(172, 142, 103);\n  }\n  &:hover {\n    color: rgb(180, 72, 30);\n    background-color: rgb(172, 142, 103);\n  }\n`;\nexport const Button = styled.button`\n  cursor: pointer;\n  padding: 8px 16px;\n  margin: 10px 0;\n  border-radius: 4px;\n  color: blue;\n  font-size: 500;\n  &:hover {\n    color: rgb(180, 72, 30);\n    background-color: rgb(172, 142, 103);\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"movieDetails__container\":\"MovieDetails_movieDetails__container__trVUx\",\"movieDetails__imgContainer\":\"MovieDetails_movieDetails__imgContainer__zBs07\",\"movieDetails__listLink\":\"MovieDetails_movieDetails__listLink__5ZBue\",\"movieDetails__itemLink\":\"MovieDetails_movieDetails__itemLink__9V1Db\"};","import { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { useState, useEffect, lazy } from 'react';\nimport { Section } from 'components/Section/Section';\nimport { LinkEl, Button } from './MovieDetails.styled';\n// import { getMovieById } from '../../helpers/getMovieById';\n// import { getGenres } from '../../helpers/getGenres';\nimport * as api from '../../helpers/api';\nimport css from './MovieDetails.module.css';\n// import {Cast from} 'components/Cast/Cast';\n// import { Reviews } from 'components/Reviews/Reviews';\nconst Cast = lazy(() => import('../../components/Cast/Cast'));\nconst Reviews = lazy(() => import('../../components/Reviews/Reviews'));\nconst MovieDetails = () => {\n  const [isShowCast, setShowCast] = useState(false);\n  const [isShowReviews, setShowReviews] = useState(false);\n  const [movie, setMovie] = useState({});\n\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    api.getMovieId(movieId).then(resp => {\n      setMovie(resp);\n    });\n  }, [movieId]);\n\n  // const {\n  //   id,\n  //   poster_path,\n  //   original_title,\n  //   overview,\n  //   genre_ids,\n  // release_date,\n  // vote_average,\n  // } = getMovieById(Number(movieId));\n\n  // const genres = getGenres(genre_ids);\n  const genres = arr => {\n    if (arr === null) return;\n    return arr?.map(genre => genre.name).join(', ');\n  };\n\n  // const year = release_date.slice(0, 4);\n  const year = score => {\n    return score?.slice(0, 4);\n  };\n  // const userScore = Math.round(vote_average * 10);\n  const userScore = score => {\n    return Math.round(score * 10);\n  };\n\n  const onClickLink = e => {\n    const nameLink = e.currentTarget.text;\n    switch (nameLink) {\n      case 'Cast':\n        setShowReviews(false);\n        setShowCast(prevCast => !prevCast);\n        break;\n      case 'Reviews':\n        setShowCast(false);\n        setShowReviews(prevRev => !prevRev);\n        break;\n      default:\n        console.log('Sorry, we are out of ' + nameLink + '.');\n    }\n  };\n\n  const onClickGoBack = e => {\n    e.preventDefault();\n    const backLink = location.state?.from ?? '/';\n    navigate(backLink);\n  };\n\n  return (\n    <Section className={css.movieDetails}>\n      {/* <Link to={location.state.from}>Go back</Link> */}\n      <Button onClick={onClickGoBack} className=\"movieDetails__btn\">\n        Go back\n      </Button>\n      <div className={css.movieDetails__container}>\n        <div className={css.movieDetails__imgContainer}>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n            alt={movie.original_title}\n          />\n        </div>\n        <div>\n          <h2>\n            {movie.original_title} ({year(movie.release_date)})\n          </h2>\n          <p>User score {userScore(movie.vote_average)}%</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h4>Genres</h4>\n          <p>{genres(movie.genres)}</p>\n        </div>\n      </div>\n      <p>Additional information</p>\n      <ul className={css.movieDetails__listLink}>\n        <li className={css.movieDetails__itemLink}>\n          <LinkEl\n            to={`/movies/${movie.id}/cast`}\n            state={location.state}\n            className={css.movieDetails__link}\n            onClick={onClickLink}\n          >\n            Cast\n          </LinkEl>\n        </li>\n        <li className={css.movieDetails__itemLink}>\n          <LinkEl\n            to={`/movies/${movie.id}/reviews`}\n            state={location.state}\n            className={css.movieDetails__link}\n            onClick={onClickLink}\n          >\n            Reviews\n          </LinkEl>\n        </li>\n      </ul>\n      {isShowCast && <Cast />}\n      {isShowReviews && <Reviews />}\n    </Section>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["LinkEl","styled","NavLink","Button","Cast","lazy","Reviews","useState","isShowCast","setShowCast","isShowReviews","setShowReviews","movie","setMovie","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","api","then","resp","score","onClickLink","e","nameLink","currentTarget","text","prevCast","prevRev","console","log","Section","className","css","onClick","preventDefault","backLink","state","from","src","poster_path","alt","original_title","release_date","slice","Math","round","userScore","vote_average","overview","arr","map","genre","name","join","genres","to","id"],"sourceRoot":""}