{"version":3,"file":"static/js/278.0655ac52.chunk.js","mappings":"uMAoGA,UA9Fe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,SAE7BC,GAAWC,EAAAA,EAAAA,OAqBjBC,EAAAA,EAAAA,YAAU,WACU,KAAdJ,GAAkC,OAAdA,GAExBK,EAAAA,GAAsBL,GAAWM,MAAK,SAAAC,GACpCb,EAAUa,EAAKC,QAChB,GAEF,GAAE,CAACR,IAuBJ,OACE,iCACE,kBAAMS,UAAU,mBAAmBC,SApBlB,SAAAC,GAInB,GAHAA,EAAEC,iBACFhB,EAAS,IAEY,KAAjBD,EAAMkB,OAAe,OAAOC,MAAM,kHAUtCT,EAAAA,GAAsBV,GAAOW,MAAK,SAAAC,GAAI,OAAIb,EAAUa,EAAKC,QAAnB,IAEtCT,EAAgB,CAAEJ,MAAOA,GAC1B,EAGG,WACE,mBAAQc,UAAU,0BAA0BM,KAAK,SAAjD,UACE,iBAAMN,UAAU,gCAAhB,uBAGF,kBAEEO,SA9BsB,SAAAL,GAC5Bf,EAASe,EAAEM,cAAcC,MAC1B,EA6BOC,KAAK,cACLJ,KAAK,OACLK,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZJ,MAAOvB,QAGX,wBACGF,EAAO8B,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACjB,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAM1B,EAAS2B,SAAW3B,EAAS4B,QAF9C,SAIGL,KALID,EASZ,QAIR,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n// import { toast } from 'react-toastify';\n// import fetchGenres from '../../helpers/fetchGenres';\n// import { saveInLS } from '../../helpers/storage';\nimport * as api from '../../helpers/api';\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const nameMovie = searchParams.get('query');\n\n  const location = useLocation();\n  //   console.log(location);\n\n  // const API_KEY = '301d018a3b09052968e9ce18b1793bab';\n  // const BASE_URL = 'https://api.themoviedb.org/3/search/movie?api_key=';\n\n  // const fetchMovies = movieName => {\n  //   try {\n  //     fetch(\n  //       `${BASE_URL}${API_KEY}&query=${movieName}&language=en-US&page=1&include_adult=false`\n  //     )\n  //       .then(res => res.json())\n  //       .then(obj => {\n  //         saveInLS('Movie', obj.results);\n  //         setMovies(obj.results);\n  //       });\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n\n  useEffect(() => {\n    if (nameMovie === '' || nameMovie === null) return;\n    // console.log('nameMovie', nameMovie);\n    api.fetchMoviesSearch(nameMovie).then(resp => {\n      setMovies(resp.results);\n    });\n    // fetchMovies(nameMovie);\n  }, [nameMovie]);\n\n  const handleMovieNameChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery('');\n    // fetchMovies(query);\n    if (query.trim() === '') return alert('Введіть назву фільму');\n    // if (query.trim() === '') return toast.warn('Введіть назву фільму');\n    // if (query.trim() === '') return toast('Введіть назву фільму');\n    // if (query.trim() === '') {\n    //   toast.warn('Введіть назву зображення');\n    //   return;\n    // }\n\n    //   return toast.warn('Введіть назву фільму');\n    // } else {\n    api.fetchMoviesSearch(query).then(resp => setMovies(resp.results));\n    // fetchGenres();\n    setSearchParams({ query: query });\n  };\n  return (\n    <>\n      <form className=\"{css.searchForm}\" onSubmit={handleSubmit}>\n        <button className=\"{css.searchForm_button}\" type=\"submit\">\n          <span className=\"{css.searchForm_button_label}\">Search</span>\n        </button>\n\n        <input\n          //   className=\"{css.searchForm_input}\"\n          onChange={handleMovieNameChange}\n          name=\"searchMovie\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={query}\n        />\n      </form>\n      <ul>\n        {movies.map(({ id, original_title }) => {\n          return (\n            <li key={id}>\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: location.pathname + location.search }}\n              >\n                {original_title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movies","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","nameMovie","get","location","useLocation","useEffect","api","then","resp","results","className","onSubmit","e","preventDefault","trim","alert","type","onChange","currentTarget","value","name","autoComplete","autoFocus","placeholder","map","id","original_title","to","state","from","pathname","search"],"sourceRoot":""}